{"version":3,"sources":["Components/GifGridItem.js","helpers/getGif.js","Components/GifGrid.js","hooks/useFetchingGif.js","Components/AddCategoria.js","App.js","index.js"],"names":["GifGridItem","id","title","img","className","src","alt","getGifs","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","item","images","downsized_medium","GifGrid","useState","loading","state","setState","useEffect","then","imgs","useFetchingGif","key","AddCategoria","setCategorias","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInputChange","App","categorias","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAWeA,EATK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACC,yBAAKC,UAAU,0CACd,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCLUK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAChBC,EADgB,gDAC+BC,UAAUH,GADzC,+DAEJI,MAAMF,GAFF,cAEhBG,EAFgB,gBAGDA,EAAIC,OAHH,uBAGfC,EAHe,EAGfA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GACrB,MAAO,CACNjB,GAAIiB,EAAKjB,GACTC,MAAOgB,EAAKhB,MACZC,IAAKe,EAAKC,OAAOC,iBAAiBV,QATd,kBAafM,GAbe,4CAAH,sDC6BLK,EAzBC,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,UAAe,ECFH,SAACA,GAAe,IAAD,EAClBc,mBAAS,CAClCP,KAAM,GACNQ,SAAS,IAHkC,mBACrCC,EADqC,KAC9BC,EAD8B,KAiB5C,OAXAC,qBAAU,WACTnB,EAAQC,GACNmB,MAAK,SAAAC,GAAI,OACTH,EAAS,CACRV,KAAMa,EACNL,SAAS,SAIV,CAACf,IAEGgB,EDVgBK,CAAerB,GAA/BO,EALyB,EAKzBA,KAAKQ,EALoB,EAKpBA,QAEZ,OACC,oCACC,4BAAKf,GACJe,EAAU,yCAAoB,KAC/B,yBAAKnB,UAAU,aAEbW,EAAKE,KAAK,SAAAC,GAAI,OACb,kBAAC,EAAD,eACCY,IAAKZ,EAAKjB,IACNiB,U,OEcIa,EAhCM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGLV,mBAAS,IAHJ,mBAGlCW,EAHkC,KAGtBC,EAHsB,KAiBzC,OACC,0BAAMC,SATc,SAAAC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BP,GAAe,SAAAQ,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAhBY,SAAAA,GACzBF,EAAcE,EAAEQ,OAAOF,OAeNG,CAAkBT,QCMtBU,EA1BH,WAAM,MAGmBxB,mBAAS,CAAC,cAH7B,mBAGVyB,EAHU,KAGEf,EAHF,KAOjB,OACC,oCACC,oCACA,kBAAC,EAAD,CAAcA,cAAiBA,IAC/B,6BACA,4BAEEe,EAAW9B,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CACCV,UAAWU,EACXY,IAAKZ,U,MCjBZ8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7c99f400.chunk.js","sourcesContent":["import React from 'react'\n\nconst GifGridItem = ({id, title, img}) => {\n\treturn (\n\t\t<div className='card animate__animated animate__fadeIn'>\n\t\t\t<img src={img} alt={title}/>\n\t\t\t<p> {title} </p>\n\t\t</div>\n\t)\n}\n\nexport default GifGridItem\n","\nexport const getGifs = async(categoria) => {\n\tconst url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=4IZTEnNxpDnEG48MAg13DnLifi7GihUJ`\n\tconst res = await fetch(url)\n\tconst {data} = await res.json()\n\t\n\tconst gifs = data.map(item => {\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\ttitle: item.title,\n\t\t\timg: item.images.downsized_medium.url\n\t\t}\n\t})\n\t\n\treturn gifs\n}","import GifGridItem from './GifGridItem'\n//\nimport React from 'react'\nimport {useFetchingGif} from '../hooks/useFetchingGif'\n\nconst GifGrid = ({categoria}) => {\n\n\t//state\n\t\n\n\tconst {data,loading} = useFetchingGif(categoria)\n\n\treturn (\n\t\t<>\n\t\t\t<h3>{categoria}</h3>\n\t\t\t{loading ? <p>Loading...</p> : null}\n\t\t\t<div className='card-grid'>\n\t\t\t\t{\n\t\t\t\t\tdata.map( item => (\n\t\t\t\t\t\t<GifGridItem \n\t\t\t\t\t\t\tkey={item.id} \n\t\t\t\t\t\t\t{...item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default GifGrid\n","import {useState, useEffect} from 'react'\nimport {getGifs} from '../helpers/getGif'\n\nexport const useFetchingGif = (categoria) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t})\n\n\tuseEffect(() => {\n\t\tgetGifs(categoria)\n\t\t\t.then(imgs => \n\t\t\t\tsetState({\n\t\t\t\t\tdata: imgs,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t)\n\n\t}, [categoria])\n\n\treturn state\n}\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategoria = ({setCategorias}) => {\n\n\t//estado\n\tconst [inputValue, setInputValue] = useState('')\n\n\t//funciones\n\tconst handleInputChange = e => {\n\t\tsetInputValue(e.target.value)\n\t}\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\t\tif(inputValue.trim().length > 0){\n\t\t\tsetCategorias( cats => [inputValue, ...cats])\n\t\t\tsetInputValue('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input \n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={e => handleInputChange(e)}\n\t\t\t/>\t\n\t\t</form>\n\t)\n}\n\nAddCategoria.propTypes = {\n\tsetCategorias: PropTypes.func.isRequired\n}\n\nexport default AddCategoria\n","import GifGrid from './Components/GifGrid'\nimport AddCategoria from './Components/AddCategoria'\n//\nimport React, {useState} from 'react'\n\nconst App = () => {\n\n\t//state\n\tconst [categorias, setCategorias] = useState(['One punch'])\n\n\t//funciones\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Giff</h2>\n\t\t\t<AddCategoria setCategorias = {setCategorias}/>\t\n\t\t\t<hr/>\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\tcategorias.map((item) => (\n\t\t\t\t\t\t<GifGrid \n\t\t\t\t\t\t\tcategoria={item} \n\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}